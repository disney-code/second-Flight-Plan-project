name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Set Dynamic Tag
      run: echo "IMAGE_TAG=disneycode/2flightroutedisplay:v1.0.0-$(date +%s)" >> $GITHUB_ENV

    - name: Debug Image Tag
      run: echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
    
    - name: Create Image Tag File
      run: echo $IMAGE_TAG > image_tag.txt

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ env.IMAGE_TAG }}
    
    - name: Debug Docker Image Pull
      run: docker pull ${{ env.IMAGE_TAG }}

  
  
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.build-and-push.outputs.IMAGE_TAG }}
    steps:
    # - name: Check IMAGE_TAG
    #   run: echo "IMAGE_TAG is: $IMAGE_TAG"

    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3

    - name: Set up Kubeconfig
      run: aws eks --region us-east-1 update-kubeconfig --name myclusterFlightProject

    # - name: Read Image Tag from File
    #   run: IMAGE_TAG=$(cat image_tag.txt)
    - name: Debug Sed
      run: |
        echo "Contents of deployment.yaml before sed:"
        cat k8s/deployment.yaml
        sed -i "s|\${IMAGE_TAG}|${IMAGE_TAG}|g" k8s/deployment.yaml
        echo "Contents of deployment.yaml after sed:"
        cat k8s/deployment.yaml

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
    
    - name: Get Service Details
      run: |
        kubectl get svc

      # - name: Set up EKS context
      #   uses: aws-actions/amazon-eks-kubectl@v1
      #   with:
      #     cluster-name: myclusterFlightProject

      # - name: Update Kubernetes deployment image
      #   run: |
      #     kubectl set image deployment/your-deployment your-container=disneycode/flightroutedisplay:v1.0.0 --record

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Download artifact
  #     # You would typically download an artifact here or take some output from the previous job.
  #     # This could be a docker-compose file, a kubernetes configuration, or just scripts to run.
      
  #   - name: Deploy to AWS
      # Here you would have steps that deploy the application to AWS, such as using AWS CLI
      # This is a placeholder and should be replaced with actual deployment steps.
